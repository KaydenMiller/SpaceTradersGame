@page "/ShipYard/{Waypoint}"
@using SpaceTraders.Pages.Location
@inject ShipYardApiService ShipYardApiService;

@if (Waypoint is not null)
{
    <MudDataGrid T="ShipType" Items="@Ships" SortMode="SortMode.Multiple" Filterable="true">
        <ToolBarContent>
            <MudText Typo="Typo.h6">ShipYard: @ShipYardDetails.Symbol.ToString()</MudText>
            <MudSpacer/>
        </ToolBarContent>
        <Columns>
            <PropertyColumn T="ShipType" TProperty="string" Property="ship => ship.Type.ToString()" Title="Ship Types"/>
        </Columns>
    </MudDataGrid>
}
else
{
    <div>Empty waypoint was received</div>
}

@code {

    [Parameter]
    public string? Waypoint { get; set; }

    private ShipYard? ShipYardDetails { get; set; }
    private IEnumerable<ShipType>? Ships { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Waypoint is not null)
        {
            var location = Location.CreateFromWaypoint(Waypoint);
            ShipYardDetails = await ShipYardApiService.GetShipYard(location);
            Ships = ShipYardDetails.Ships;
        }
    }

}