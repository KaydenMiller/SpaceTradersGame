@using SpaceTraders.Core
@using SpaceTraders.Api.Ships
@inject ShipApiService ShipApiService

<MudStack Row>
    <MudSlider Min="1"
               Max="Item.Quantity"
               ValueLabel="true"
               @bind-Value="_quantityToSell">Quantity: @_quantityToSell</MudSlider>
    <MudButton Color="Color.Warning"
               Variant="Variant.Filled"
               OnClick="@(() => SellInventoryItem(Item.Id, _quantityToSell))">Sell</MudButton>
</MudStack>

@code {

    [Parameter]
    public Ship ActiveShip { get; set; } = default!;

    [Parameter]
    public InventoryItem Item { get; set; } = default!;

    private int _quantityToSell = 1;

    private async Task SellInventoryItem(string itemId, int quantityToSell)
    {
        if (ActiveShip is null) throw new NullReferenceException("CurrentShip cannot be null in order to sell");
        
        _ = await ShipApiService.SellCargo(ActiveShip, itemId, quantityToSell);
    } 
}