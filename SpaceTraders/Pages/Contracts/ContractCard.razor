@using SpaceTraders.Core
<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">@Contract.FactionSymbol</MudText>
            <MudText Typo="Typo.body2">@Contract.Type</MudText>
            <MudText Typo="Typo.body2">Expires: @Contract.Expiration</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudText Typo="Typo.body2">
            <MudList Dense="true">
                <MudListItem>Accepted: @Contract.Accepted</MudListItem>
                <MudListItem>Fulfilled: @Contract.Fulfilled</MudListItem>
                <MudListItem>Accept Deadline: @Contract.DeadlineToAccept</MudListItem>
                <MudListItem>Delivery Deadline: @Contract.Terms.Deadline</MudListItem>
                <MudListItem>Payment on Accepted: @Contract.Terms.Payment.OnAccepted</MudListItem>
                <MudListItem>Payment on Fulfilled: @Contract.Terms.Payment.OnFulfilled</MudListItem>
            </MudList>
            <MudTreeView T="string" Dense="true">
                <MudTreeViewItem Value="@("Required Deliveries")">
                    @foreach (var delivery in Contract.Terms.Deliveries ?? Enumerable.Empty<Contract.ContractTerms.Delivery>())
                    {
                        <MudTreeViewItem Value="@delivery.TradeSymbol">
                            <MudTreeViewItem Value="@("Destination Symbol: " + delivery.DestinationSymbol)"></MudTreeViewItem>
                            <MudTreeViewItem Value="@("Units Required: " + delivery.UnitsRequired)"></MudTreeViewItem>
                            <MudTreeViewItem Value="@("Units Fulfilled: " + delivery.UnitsFulfilled)"></MudTreeViewItem>
                        </MudTreeViewItem>
                    }
                </MudTreeViewItem>
            </MudTreeView>
        </MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary">ACCEPT</MudButton>
    </MudCardActions>
</MudCard>

@code {

    [Parameter]
    public Contract Contract { get; set; } = default!;

}